/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Entidades.Conector;
import Entidades.Dcatalogo;
import Models.AsientoModel;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;

/**
 *
 * @author Andy
 */
public class Mayori extends javax.swing.JPanel {

    Dcatalogo archivo = new Dcatalogo();
    DefaultTableModel jtModelo;
    ArrayList<String> datos;
    TableRowSorter trs ;
    AsientoModel cn;
    /**
     * Creates new form Catalogo
     */
    public Mayori() throws SQLException {
        initComponents();
        jtModelo = (DefaultTableModel) this.jTable1.getModel(); 
        cn = new AsientoModel();
        btnExpor.setEnabled(false);

//        this.cargarDatos();   
    }
//    public void cargarDatos() throws SQLException 
//    {
//        jtModelo = cn.obtenerDatos();
//        this.jTable1.setModel(jtModelo);
//        this.jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
//        //this.jTable1.setFillsViewportHeight(true);
//        
//    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        fecha1 = new com.toedter.calendar.JDateChooser();
        fecha2 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnExpor = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Roboto Black", 2, 36)); // NOI18N
        jLabel1.setText("Mayorizaci√≥n ");

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cuenta", "Debe", "Haber", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Hasta");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Filtrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnExpor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExpor.setText("Exportar Excel");
        btnExpor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExporActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addComponent(fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(fecha2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jButton1)
                        .addGap(28, 28, 28)
                        .addComponent(btnExpor)))
                .addGap(210, 210, 210))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(btnExpor))
                        .addComponent(fecha2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (fecha1.getDate() == null || fecha2.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Por favor verifique su fecha.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            this.eliminar();
        Conector cc = new Conector();
        Connection cn = cc.conectar();
        SimpleDateFormat DateFor = new SimpleDateFormat("yyyy-MM-dd");
        String filtrof1 = DateFor.format(fecha1.getDate());
        String filtrof2 = DateFor.format(fecha2.getDate());
        String consultafiltra="SELECT codigo,nombrec,fecha,debe,haber FROM asiento  WHERE fecha BETWEEN '"+filtrof1+"' AND '"+filtrof2+"' order by codigo" ;
        ArrayList<String> lista = new ArrayList<>();
       String datos1,nasiento,cuenta,debe,haber,fecha; 
       int codigoA=0;
       int codigoB=0;
       int movimientoD=0;
       int movimientoH=0;
       int saldoF=0;
       

       try{ 
             Statement stmt = cn.createStatement();
             ResultSet rs  = stmt.executeQuery(consultafiltra);
             String[] datosN = new String[4]; 
             int Bandera =0;
             while(rs.next()){
                 codigoA=codigoB;
                 codigoB=rs.getInt("codigo");
//                cuenta = rs.getString("nombrec");
                   debe = Integer.toString(rs.getInt("debe"));
                haber = Integer.toString(rs.getInt("haber"));
                fecha = rs.getString("fecha");
                if(Bandera==0){
                    cuenta=rs.getString("nombrec");
                    datos1 = (cuenta+","+" "+","+" "+","+" ");
                    lista.add(datos1);
                   cuenta="    ";
                   Bandera++;
                    movimientoD=movimientoD+rs.getInt("debe");
                    movimientoH=movimientoH+rs.getInt("haber");
                }else{
                    if(codigoA==codigoB){
//                        System.out.println("La cuenta"+codigoA+"es igual a la cuenta"+codigoB);
                        cuenta="    ";
                        movimientoD=movimientoD+rs.getInt("debe");
                        movimientoH=movimientoH+rs.getInt("haber");
                    }
                    else{
                        cuenta="    Total";
                        debe=Integer.toString(movimientoD);
                        haber=Integer.toString(movimientoH);
                        datos1 = (cuenta+","+debe+","+haber+","+" ");
                        lista.add(datos1);
                        if(movimientoD>movimientoH){
                            saldoF=movimientoD-movimientoH;
                            debe=Integer.toString(saldoF);
                            datos1 = ("    Saldo"+","+debe+","+" "+","+" ");
                            lista.add(datos1);

                        }else{
                            saldoF=movimientoH-movimientoD;
                            haber=Integer.toString(saldoF);
                            datos1 = ("    Saldo"+","+" "+","+haber+","+" ");
                            lista.add(datos1);

                        }
                        cuenta=rs.getString("nombrec");
                        datos1 = (cuenta+","+""+","+" "+","+" ");
                        lista.add(datos1);
                        debe = Integer.toString(rs.getInt("debe"));
                        haber = Integer.toString(rs.getInt("haber"));
//                        System.out.println("La cuenta"+codigoA+"es diferente a la cuenta"+codigoB);
                        cuenta="   ";
                        movimientoD=0;
                        movimientoH=0;
                        movimientoD=movimientoD+rs.getInt("debe");
                        movimientoH=movimientoH+rs.getInt("haber");
                        
                    }
                
                }
                    
               
                datos1 = (cuenta+","+debe+","+haber+","+fecha);
                lista.add(datos1);
            }
                        cuenta="    Total";
                        debe=Integer.toString(movimientoD);
                        haber=Integer.toString(movimientoH);
                        datos1 = (cuenta+","+debe+","+haber+","+" ");
                        lista.add(datos1);
                        if(movimientoD>movimientoH){
                            saldoF=movimientoD-movimientoH;
                            debe=Integer.toString(saldoF);
                            datos1 = ("    Saldo"+","+debe+","+" "+","+" ");
                            lista.add(datos1);

                        }else{
                            saldoF=movimientoH-movimientoD;
                            haber=Integer.toString(saldoF);
                            datos1 = ("    Saldo"+","+" "+","+haber+","+" ");
                            lista.add(datos1);

                        }
              
              btnExpor.setEnabled(true);

              Dashboard ds = new Dashboard();          
             String[] columnNames = {"Empresa"+ds.empresa," Desde"+filtrof1," hasta"+filtrof2," "};
             jtModelo.setColumnIdentifiers(columnNames);
              jtModelo.addRow(new Object[]{"Cuenta","Debe","Haber","Fecha"});
            for (int i = 0; i <=lista.size(); i++) {
                 datosN = lista.get(i).split(",");
                jtModelo.addRow(datosN);

            }  
     

            jTable1.setModel(jtModelo);

            
       }catch( SQLException e ) {

          System.err.println( e.getClass().getName() + ": " + e.getMessage() );
        }
       
        cc.close();
        }

       
    }//GEN-LAST:event_jButton1ActionPerformed

    public void exportarExcel(JTable t) throws IOException {
        Dashboard ds = new Dashboard();
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de excel", "xls");
        chooser.setFileFilter(filter);
        chooser.setDialogTitle("Guardar archivo");
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            String ruta = chooser.getSelectedFile().toString().concat(".xls");
            try {
                File archivoXLS = new File(ruta);
                if (archivoXLS.exists()) {
                    archivoXLS.delete();
                }
                archivoXLS.createNewFile();
                Workbook libro = new HSSFWorkbook();
                FileOutputStream archivo = new FileOutputStream(archivoXLS);
                Sheet hoja = libro.createSheet("Mayorizacion "+ds.empresa);
                hoja.setDisplayGridlines(true);
                for (int f = 0; f < t.getRowCount(); f++) {
                    Row fila = hoja.createRow(f);
                    for (int c = 0; c < t.getColumnCount(); c++) {
                        Cell celda = fila.createCell(c);
                        if (f == 0) {
                            celda.setCellValue(t.getColumnName(c));
                        }
                    }
                }
                int filaInicio = 1;
                for (int f = 0; f < t.getRowCount(); f++) {
                    Row fila = hoja.createRow(filaInicio);
                    filaInicio++;
                    for (int c = 0; c < t.getColumnCount(); c++) {
                        Cell celda = fila.createCell(c);
                        if (t.getValueAt(f, c) instanceof Double) {
                            celda.setCellValue(Double.parseDouble(t.getValueAt(f, c).toString()));
                        } else if (t.getValueAt(f, c) instanceof Float) {
                            celda.setCellValue(Float.parseFloat((String) t.getValueAt(f, c)));
                        } else {
                            celda.setCellValue(String.valueOf(t.getValueAt(f, c)));
                        }
                    }
                }
                libro.write(archivo);
                archivo.close();
                Desktop.getDesktop().open(archivoXLS);
            } catch (IOException | NumberFormatException e) {
                throw e;
            }
        }
    }
    private void btnExporActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExporActionPerformed
        // TODO add your handling code here:
        try {
            
            exportarExcel(jTable1);
        } catch (IOException ex) {
            System.out.println("Error: " + ex);
        }
    }//GEN-LAST:event_btnExporActionPerformed

      public void eliminar(){
           jtModelo.getDataVector().removeAllElements(); 
           jtModelo.fireTableDataChanged();

        
    

       }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExpor;
    private com.toedter.calendar.JDateChooser fecha1;
    private com.toedter.calendar.JDateChooser fecha2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
