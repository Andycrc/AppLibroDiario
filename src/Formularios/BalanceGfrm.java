/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Entidades.Conector;
import Entidades.Dcatalogo;
import static Formularios.Dashboard.content;
import Models.AsientoModel;
import java.awt.BorderLayout;
import java.awt.Desktop;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Andy
 */
public class BalanceGfrm extends javax.swing.JPanel {

    Dcatalogo archivo = new Dcatalogo();
    DefaultTableModel jtModelo;
    ArrayList<String> datos;
    TableRowSorter trs ;
    AsientoModel cn;
    /**
     * Creates new form Catalogo
     */
    public BalanceGfrm() throws SQLException {
        initComponents();
        jtModelo = (DefaultTableModel) this.jTable1.getModel(); 
        cn = new AsientoModel();
//        this.cargarDatos();   
    }
//    public void cargarDatos() throws SQLException 
//    {
//        jtModelo = cn.obtenerDatos();
//        this.jTable1.setModel(jtModelo);
//        this.jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
//        //this.jTable1.setFillsViewportHeight(true);
//        
//    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        fecha1 = new com.toedter.calendar.JDateChooser();
        fecha2 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Roboto Black", 2, 36)); // NOI18N
        jLabel1.setText("Balance general");

        jLabel2.setText("Hasta");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setText("Filtrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton2.setText("Imprimir");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("Concepto");

        jLabel4.setText("Movimientos");

        jLabel5.setText("Saldos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jLabel3)
                .addGap(164, 164, 164)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 186, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Cuenta", "Debe", "Haber", "Debe", "Haber"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(197, Short.MAX_VALUE)
                .addComponent(fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(52, 52, 52)
                        .addComponent(fecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jButton1)
                        .addGap(28, 28, 28)
                        .addComponent(jButton2)))
                .addGap(210, 210, 210))
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 737, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fecha1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fecha2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       this.eliminar();
        Conector cc = new Conector();
        Connection cn = cc.conectar();
        SimpleDateFormat DateFor = new SimpleDateFormat("yyyy-MM-dd");
        String filtrof1 = DateFor.format(fecha1.getDate());
        String filtrof2 = DateFor.format(fecha2.getDate());
        String consultafiltra="SELECT codigo,nombrec,fecha,debe,haber FROM asiento  WHERE fecha BETWEEN '"+filtrof1+"' AND '"+filtrof2+"' order by codigo" ;
        ArrayList<String> lista = new ArrayList<>();
       String datos1,nasiento,cuenta="",debe,haber,fecha; 
       int codigoA=0;
       int codigoB=0;
       int movimientoD=0;
       int movimientoH=0;
       int saldoF=0;
       int tmovimientoD=0;
       int tmovimientoH=0;
       int tsaldoF=0;
       

       try{ 
             Statement stmt = cn.createStatement();
             ResultSet rs  = stmt.executeQuery(consultafiltra);
             String[] datosN = new String[4]; 
             int Bandera =0;
             while(rs.next()){
                 codigoA=codigoB;
                 codigoB=rs.getInt("codigo");
                    
                 if(Bandera==0){
                     Bandera++;
                    cuenta = rs.getString("nombrec");
                    movimientoD=movimientoD+rs.getInt("debe");
                    movimientoH=movimientoH+rs.getInt("haber");
                 
                 }else{
                    if(codigoA==codigoB){
                        movimientoD=movimientoD+rs.getInt("debe");
                        movimientoH=movimientoH+rs.getInt("haber");
                    }
                    else{
                        if(movimientoD>movimientoH){
                            debe=Integer.toString(movimientoD);
                            tmovimientoD = tmovimientoD+movimientoD;
                            haber=Integer.toString(movimientoH);
                            
                            saldoF=movimientoD-movimientoH;
                            datos1 = (codigoB+","+cuenta+","+debe+","+haber+","+saldoF+","+"----");
                            lista.add(datos1);

                        
                        }else{
                            debe=Integer.toString(movimientoD);
                            haber=Integer.toString(movimientoH);
                            saldoF=movimientoD-movimientoH;
                            datos1 = (codigoB+","+cuenta+","+debe+","+haber+","+"-----"+","+saldoF);
                            lista.add(datos1);
                        
                        }
                        movimientoD=0;
                        movimientoH=0;
                        movimientoD=movimientoD+rs.getInt("debe");
                        movimientoH=movimientoH+rs.getInt("haber");
                        cuenta = rs.getString("nombrec");


                        
                    }
                 
                 
                 }       

                
                
                    

            }
              if(movimientoD>movimientoH){
                            debe=Integer.toString(movimientoD);
                            haber=Integer.toString(movimientoH);
                            saldoF=movimientoD-movimientoH;
                            datos1 = (codigoB+","+cuenta+","+debe+","+haber+","+saldoF+","+"----");
                            lista.add(datos1);

                        
                        }else{
                            debe=Integer.toString(movimientoD);
                            haber=Integer.toString(movimientoH);
                            saldoF=movimientoD-movimientoH;
                            datos1 = (codigoB+","+cuenta+","+debe+","+haber+","+"-----"+","+saldoF);
                            lista.add(datos1);
                        
                        }
                       
           
            for (int i = 0; i <=lista.size(); i++) {
                 datosN = lista.get(i).split(",");
                jtModelo.addRow(datosN);

            }  
     
            
            jTable1.setModel(jtModelo);

            
       }catch( Exception e ) {

          System.err.println( e.getClass().getName() + ": " + e.getMessage() );
        }
       
        cc.close();
    }//GEN-LAST:event_jButton1ActionPerformed

      public void eliminar(){
           jtModelo.getDataVector().removeAllElements(); 
           jtModelo.fireTableDataChanged();

        
    

       }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser fecha1;
    private com.toedter.calendar.JDateChooser fecha2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
